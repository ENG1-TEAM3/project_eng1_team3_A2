@startuml
class Customer{
Vector2 position
Sprite sprite
String request
Customer(Sprite sprite)
Customer(Sprite sprite, Vector2 position)
String randomRecipe()
render(SpriteBatch batch)
float getX()
float getY()
String getRequestName()
setRequestName(String req)
setTimings(int spnTime, int dedTime)
getSpawnTime()
getDeadTime()
getStationIndex()


}
class CustomerController{
CustomerController(GameScreen gameScreen)
boolean canAddCustomer()
int addCustomer()
restoreCustomerFromSave(int stationIndex, int spawnTime, int deadTime, String order)
removeCustomer(ServingStation station)
setCustomersLeft(int customersLeft)
int getCustomersLeft()
setCustomersServed(int customersServed)
int getCustomersServed()
setTotalCustomersToServe(int amount)
int getTotalCustomersToServe()
Array<Customer>getCustomers()
multiplyTimeBetweenServes()
int timeBetweenSpawnsSeconds()
addServingStation(ServingStation station)
Array<ServingStation> getServingStations()
customerServed(ServingStation station)
clearServingStations()
tryToSpawnCustomer(MenuScreen.difficulty msd, MenuScreen.mode md)
int getTimeMultiplier()
addCustomerManual(Customer cus)
setupCustomer(Customer cus, int spawnTime, int patience)
removeCustomerIfExpired(Customer customer)
float returnFractionProgressUntilNextCustomer()
setLastCustomerSpawnTime(int tm)
int getLastCustomerSpawnTime()
}

CustomerController --> Customer : Stores instances of

@enduml